"""pave

Revision ID: 2fb096955963
Revises: 
Create Date: 2023-12-07 02:08:08.036169

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2fb096955963'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token_type', sa.String(), nullable=True),
    sa.Column('access_token', sa.String(), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_id'), 'tokens', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('activity_level', sa.Integer(), nullable=True),
    sa.Column('health_goals', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_activity_level'), 'users', ['activity_level'], unique=False)
    op.create_index(op.f('ix_users_age'), 'users', ['age'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_gender'), 'users', ['gender'], unique=False)
    op.create_index(op.f('ix_users_health_goals'), 'users', ['health_goals'], unique=False)
    op.create_index(op.f('ix_users_height'), 'users', ['height'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_weight'), 'users', ['weight'], unique=False)
    op.create_table('food_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meal_type', sa.String(), nullable=False),
    sa.Column('servings', sa.Float(), nullable=False),
    sa.Column('date_logged', sa.DateTime(), nullable=False),
    sa.Column('calories', sa.Float(), nullable=False),
    sa.Column('protein', sa.Float(), nullable=False),
    sa.Column('carbs', sa.Float(), nullable=False),
    sa.Column('fats', sa.Float(), nullable=False),
    sa.Column('serving_unit', sa.VARCHAR(), nullable=False),
    sa.Column('serving_weight_grams', sa.Float(), nullable=False),
    sa.Column('food_name', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_food_logs_calories'), 'food_logs', ['calories'], unique=False)
    op.create_index(op.f('ix_food_logs_carbs'), 'food_logs', ['carbs'], unique=False)
    op.create_index(op.f('ix_food_logs_date_logged'), 'food_logs', ['date_logged'], unique=False)
    op.create_index(op.f('ix_food_logs_fats'), 'food_logs', ['fats'], unique=False)
    op.create_index(op.f('ix_food_logs_food_name'), 'food_logs', ['food_name'], unique=False)
    op.create_index(op.f('ix_food_logs_id'), 'food_logs', ['id'], unique=False)
    op.create_index(op.f('ix_food_logs_meal_type'), 'food_logs', ['meal_type'], unique=False)
    op.create_index(op.f('ix_food_logs_protein'), 'food_logs', ['protein'], unique=False)
    op.create_index(op.f('ix_food_logs_serving_unit'), 'food_logs', ['serving_unit'], unique=False)
    op.create_index(op.f('ix_food_logs_serving_weight_grams'), 'food_logs', ['serving_weight_grams'], unique=False)
    op.create_index(op.f('ix_food_logs_servings'), 'food_logs', ['servings'], unique=False)
    op.create_table('users_to_foods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['food_id'], ['food_logs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_to_foods_id'), 'users_to_foods', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_to_foods_id'), table_name='users_to_foods')
    op.drop_table('users_to_foods')
    op.drop_index(op.f('ix_food_logs_servings'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_serving_weight_grams'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_serving_unit'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_protein'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_meal_type'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_id'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_food_name'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_fats'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_date_logged'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_carbs'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_calories'), table_name='food_logs')
    op.drop_table('food_logs')
    op.drop_index(op.f('ix_users_weight'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_height'), table_name='users')
    op.drop_index(op.f('ix_users_health_goals'), table_name='users')
    op.drop_index(op.f('ix_users_gender'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_age'), table_name='users')
    op.drop_index(op.f('ix_users_activity_level'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tokens_id'), table_name='tokens')
    op.drop_table('tokens')
    # ### end Alembic commands ###
