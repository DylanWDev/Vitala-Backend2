"""some message

Revision ID: 5e1e0283a8d6
Revises: 3524c5399124
Create Date: 2023-11-30 21:09:06.294444

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5e1e0283a8d6'
down_revision: Union[str, None] = '3524c5399124'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('meal_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meal_type', sa.String(), nullable=True),
    sa.Column('portion_size', sa.Integer(), nullable=True),
    sa.Column('log_date', sa.DateTime(), nullable=True),
    sa.Column('calories', sa.Integer(), nullable=True),
    sa.Column('protein', sa.Integer(), nullable=True),
    sa.Column('carbs', sa.Integer(), nullable=True),
    sa.Column('fats', sa.Integer(), nullable=True),
    sa.Column('water', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meal_logs_calories'), 'meal_logs', ['calories'], unique=False)
    op.create_index(op.f('ix_meal_logs_carbs'), 'meal_logs', ['carbs'], unique=False)
    op.create_index(op.f('ix_meal_logs_fats'), 'meal_logs', ['fats'], unique=False)
    op.create_index(op.f('ix_meal_logs_id'), 'meal_logs', ['id'], unique=False)
    op.create_index(op.f('ix_meal_logs_log_date'), 'meal_logs', ['log_date'], unique=False)
    op.create_index(op.f('ix_meal_logs_meal_type'), 'meal_logs', ['meal_type'], unique=False)
    op.create_index(op.f('ix_meal_logs_portion_size'), 'meal_logs', ['portion_size'], unique=False)
    op.create_index(op.f('ix_meal_logs_protein'), 'meal_logs', ['protein'], unique=False)
    op.create_index(op.f('ix_meal_logs_water'), 'meal_logs', ['water'], unique=False)
    op.create_table('nutritionix_foods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('servings_size', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nutritionix_foods_calories'), 'nutritionix_foods', ['calories'], unique=False)
    op.create_index(op.f('ix_nutritionix_foods_external_id'), 'nutritionix_foods', ['external_id'], unique=False)
    op.create_index(op.f('ix_nutritionix_foods_id'), 'nutritionix_foods', ['id'], unique=False)
    op.create_index(op.f('ix_nutritionix_foods_name'), 'nutritionix_foods', ['name'], unique=False)
    op.create_index(op.f('ix_nutritionix_foods_servings_size'), 'nutritionix_foods', ['servings_size'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_nutritionix_foods_servings_size'), table_name='nutritionix_foods')
    op.drop_index(op.f('ix_nutritionix_foods_name'), table_name='nutritionix_foods')
    op.drop_index(op.f('ix_nutritionix_foods_id'), table_name='nutritionix_foods')
    op.drop_index(op.f('ix_nutritionix_foods_external_id'), table_name='nutritionix_foods')
    op.drop_index(op.f('ix_nutritionix_foods_calories'), table_name='nutritionix_foods')
    op.drop_table('nutritionix_foods')
    op.drop_index(op.f('ix_meal_logs_water'), table_name='meal_logs')
    op.drop_index(op.f('ix_meal_logs_protein'), table_name='meal_logs')
    op.drop_index(op.f('ix_meal_logs_portion_size'), table_name='meal_logs')
    op.drop_index(op.f('ix_meal_logs_meal_type'), table_name='meal_logs')
    op.drop_index(op.f('ix_meal_logs_log_date'), table_name='meal_logs')
    op.drop_index(op.f('ix_meal_logs_id'), table_name='meal_logs')
    op.drop_index(op.f('ix_meal_logs_fats'), table_name='meal_logs')
    op.drop_index(op.f('ix_meal_logs_carbs'), table_name='meal_logs')
    op.drop_index(op.f('ix_meal_logs_calories'), table_name='meal_logs')
    op.drop_table('meal_logs')
    # ### end Alembic commands ###
