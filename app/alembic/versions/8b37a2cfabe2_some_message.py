"""some message

Revision ID: 8b37a2cfabe2
Revises: 5e1e0283a8d6
Create Date: 2023-11-30 21:26:13.643067

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8b37a2cfabe2'
down_revision: Union[str, None] = '5e1e0283a8d6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('food_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meal_type', sa.String(), nullable=True),
    sa.Column('servings', sa.Float(), nullable=True),
    sa.Column('date_logged', sa.DateTime(), nullable=True),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('fats', sa.Float(), nullable=True),
    sa.Column('water', sa.Float(), nullable=True),
    sa.Column('serving_unit', sa.VARCHAR(), nullable=True),
    sa.Column('serving_weight_grams', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_food_log_calories'), 'food_log', ['calories'], unique=False)
    op.create_index(op.f('ix_food_log_carbs'), 'food_log', ['carbs'], unique=False)
    op.create_index(op.f('ix_food_log_date_logged'), 'food_log', ['date_logged'], unique=False)
    op.create_index(op.f('ix_food_log_fats'), 'food_log', ['fats'], unique=False)
    op.create_index(op.f('ix_food_log_id'), 'food_log', ['id'], unique=False)
    op.create_index(op.f('ix_food_log_meal_type'), 'food_log', ['meal_type'], unique=False)
    op.create_index(op.f('ix_food_log_protein'), 'food_log', ['protein'], unique=False)
    op.create_index(op.f('ix_food_log_serving_unit'), 'food_log', ['serving_unit'], unique=False)
    op.create_index(op.f('ix_food_log_serving_weight_grams'), 'food_log', ['serving_weight_grams'], unique=False)
    op.create_index(op.f('ix_food_log_servings'), 'food_log', ['servings'], unique=False)
    op.create_index(op.f('ix_food_log_water'), 'food_log', ['water'], unique=False)
    op.create_table('users_to_foods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['food_id'], ['food_log.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_to_foods_id'), 'users_to_foods', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_to_foods_id'), table_name='users_to_foods')
    op.drop_table('users_to_foods')
    op.drop_index(op.f('ix_food_log_water'), table_name='food_log')
    op.drop_index(op.f('ix_food_log_servings'), table_name='food_log')
    op.drop_index(op.f('ix_food_log_serving_weight_grams'), table_name='food_log')
    op.drop_index(op.f('ix_food_log_serving_unit'), table_name='food_log')
    op.drop_index(op.f('ix_food_log_protein'), table_name='food_log')
    op.drop_index(op.f('ix_food_log_meal_type'), table_name='food_log')
    op.drop_index(op.f('ix_food_log_id'), table_name='food_log')
    op.drop_index(op.f('ix_food_log_fats'), table_name='food_log')
    op.drop_index(op.f('ix_food_log_date_logged'), table_name='food_log')
    op.drop_index(op.f('ix_food_log_carbs'), table_name='food_log')
    op.drop_index(op.f('ix_food_log_calories'), table_name='food_log')
    op.drop_table('food_log')
    # ### end Alembic commands ###
