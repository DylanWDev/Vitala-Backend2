"""Initial migration

Revision ID: c4f62fb04757
Revises: bd94a1974f62
Create Date: 2023-12-04 16:11:58.402032

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c4f62fb04757'
down_revision: Union[str, None] = 'bd94a1974f62'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('food_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meal_type', sa.String(), nullable=False),
    sa.Column('servings', sa.Float(), nullable=False),
    sa.Column('date_logged', sa.DateTime(), nullable=False),
    sa.Column('calories', sa.Float(), nullable=False),
    sa.Column('protein', sa.Float(), nullable=False),
    sa.Column('carbs', sa.Float(), nullable=False),
    sa.Column('fats', sa.Float(), nullable=False),
    sa.Column('water', sa.Float(), nullable=False),
    sa.Column('serving_unit', sa.VARCHAR(), nullable=False),
    sa.Column('serving_weight_grams', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_food_logs_calories'), 'food_logs', ['calories'], unique=False)
    op.create_index(op.f('ix_food_logs_carbs'), 'food_logs', ['carbs'], unique=False)
    op.create_index(op.f('ix_food_logs_date_logged'), 'food_logs', ['date_logged'], unique=False)
    op.create_index(op.f('ix_food_logs_fats'), 'food_logs', ['fats'], unique=False)
    op.create_index(op.f('ix_food_logs_id'), 'food_logs', ['id'], unique=False)
    op.create_index(op.f('ix_food_logs_meal_type'), 'food_logs', ['meal_type'], unique=False)
    op.create_index(op.f('ix_food_logs_protein'), 'food_logs', ['protein'], unique=False)
    op.create_index(op.f('ix_food_logs_serving_unit'), 'food_logs', ['serving_unit'], unique=False)
    op.create_index(op.f('ix_food_logs_serving_weight_grams'), 'food_logs', ['serving_weight_grams'], unique=False)
    op.create_index(op.f('ix_food_logs_servings'), 'food_logs', ['servings'], unique=False)
    op.create_index(op.f('ix_food_logs_water'), 'food_logs', ['water'], unique=False)
    op.drop_index('ix_food_log_calories', table_name='food_log')
    op.drop_index('ix_food_log_carbs', table_name='food_log')
    op.drop_index('ix_food_log_date_logged', table_name='food_log')
    op.drop_index('ix_food_log_fats', table_name='food_log')
    op.drop_index('ix_food_log_id', table_name='food_log')
    op.drop_index('ix_food_log_meal_type', table_name='food_log')
    op.drop_index('ix_food_log_protein', table_name='food_log')
    op.drop_index('ix_food_log_serving_unit', table_name='food_log')
    op.drop_index('ix_food_log_serving_weight_grams', table_name='food_log')
    op.drop_index('ix_food_log_servings', table_name='food_log')
    op.drop_index('ix_food_log_water', table_name='food_log')
    op.drop_table('food_log')
    op.drop_constraint('users_to_foods_food_id_fkey', 'users_to_foods', type_='foreignkey')
    op.create_foreign_key(None, 'users_to_foods', 'food_logs', ['food_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users_to_foods', type_='foreignkey')
    op.create_foreign_key('users_to_foods_food_id_fkey', 'users_to_foods', 'food_log', ['food_id'], ['id'])
    op.create_table('food_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('meal_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('servings', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('date_logged', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('calories', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('protein', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('carbs', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fats', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('water', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('serving_unit', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('serving_weight_grams', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='food_log_pkey')
    )
    op.create_index('ix_food_log_water', 'food_log', ['water'], unique=False)
    op.create_index('ix_food_log_servings', 'food_log', ['servings'], unique=False)
    op.create_index('ix_food_log_serving_weight_grams', 'food_log', ['serving_weight_grams'], unique=False)
    op.create_index('ix_food_log_serving_unit', 'food_log', ['serving_unit'], unique=False)
    op.create_index('ix_food_log_protein', 'food_log', ['protein'], unique=False)
    op.create_index('ix_food_log_meal_type', 'food_log', ['meal_type'], unique=False)
    op.create_index('ix_food_log_id', 'food_log', ['id'], unique=False)
    op.create_index('ix_food_log_fats', 'food_log', ['fats'], unique=False)
    op.create_index('ix_food_log_date_logged', 'food_log', ['date_logged'], unique=False)
    op.create_index('ix_food_log_carbs', 'food_log', ['carbs'], unique=False)
    op.create_index('ix_food_log_calories', 'food_log', ['calories'], unique=False)
    op.drop_index(op.f('ix_food_logs_water'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_servings'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_serving_weight_grams'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_serving_unit'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_protein'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_meal_type'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_id'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_fats'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_date_logged'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_carbs'), table_name='food_logs')
    op.drop_index(op.f('ix_food_logs_calories'), table_name='food_logs')
    op.drop_table('food_logs')
    # ### end Alembic commands ###
